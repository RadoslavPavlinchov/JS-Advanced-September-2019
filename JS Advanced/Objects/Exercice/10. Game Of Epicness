function gameOfEpicness(inputKingdoms, inputBattles) {
    let kingdoms = {};
    let output = "";
    for (const token of inputKingdoms) {
       let kingdom = token.kingdom;
       let general = token.general;
       let army = token.army;
       if (!kingdoms[kingdom]) {
        kingdoms[kingdom] = { [ general ]: { army } };
        kingdoms[kingdom][general].wins = 0;
        kingdoms[kingdom][general].losses = 0;
       } else {
           if (!kingdoms[kingdom][general]) {
            kingdoms[kingdom][general] = { army } ;
            kingdoms[kingdom][general ].wins = 0;
            kingdoms[kingdom][general].losses = 0;
           } else {
            kingdoms[kingdom][general].army += army;
           }
       }
    }
    for (const line of inputBattles) {
        let [attackKingdom, attackGeneral, defendKingdom, defendGeneral,] = line.join(", ").split(", ");
        if (attackKingdom !== defendKingdom) {
            if (kingdoms[attackKingdom][attackGeneral].army > kingdoms[defendKingdom][defendGeneral].army) {
                kingdoms[attackKingdom][attackGeneral].army = parseInt(kingdoms[attackKingdom][attackGeneral].army * 1.1);
                kingdoms[defendKingdom][defendGeneral].army = parseInt(kingdoms[defendKingdom][defendGeneral].army * 0.9);
                kingdoms[attackKingdom][attackGeneral].wins++;
                kingdoms[defendKingdom][defendGeneral].losses++;
            } else {
                kingdoms[attackKingdom][attackGeneral].army = parseInt(kingdoms[attackKingdom][attackGeneral].army * 0.9);
                kingdoms[defendKingdom][defendGeneral].army = parseInt(kingdoms[defendKingdom][defendGeneral].army * 1.1);
                kingdoms[defendKingdom][defendGeneral].wins++;
                kingdoms[attackKingdom][attackGeneral].losses++;
            }
        }
    }
    for (const e in kingdoms) {
        let totalWins = 0;
        let totalLosses = 0;
        for (const i in kingdoms[e]) {
            totalWins += kingdoms[e][i].wins;
            totalLosses += kingdoms[e][i].losses;
        } 
        kingdoms[e].totalWins = totalWins;
        kingdoms[e].totalLosses = totalLosses;
    }

    let arr = Object.entries(kingdoms)
    .sort((a, b) => b[1].totalWins - a[1].totalWins);

    let winner = arr[0];

  
        console.log(output += `Winner: ${winner[0]}\n/\\general: ${winner[1]}\n---army: ${winner[1].army}\n---wins: ${winner[1].wins}\n---losses: ${winner[1].losses}`);
    
    // winner
    // // .forEach(e => {
    // //     output += `Winner: ${winner[0]}\n/\\general: ${winner[1]}\n---army: ${winner[1].army}\n---wins: ${winner[1].wins}\n---losses: ${winner[1].losses}`;
    // // });
    // // console.log(output);
}
console.log(gameOfEpicness([
    { kingdom: 'Maiden Way', general: 'Merek', army: 5000 },
    { kingdom: 'Stonegate', general: 'Ulric', army: 4900 },
    { kingdom: 'Stonegate', general: 'Doran', army: 70000 },
    { kingdom: 'YorkenShire', general: 'Quinn', army: 0 },
    { kingdom: 'YorkenShire', general: 'Quinn', army: 2000 },
    { kingdom: 'Maiden Way', general: 'Berinon', army: 100000 }
  ], [
    [ 'YorkenShire', 'Quinn', 'Stonegate', 'Ulric' ],
    [ 'Stonegate', 'Ulric', 'Stonegate', 'Doran' ],
    [ 'Stonegate', 'Doran', 'Maiden Way', 'Merek' ],
    [ 'Stonegate', 'Ulric', 'Maiden Way', 'Merek' ],
    [ 'Maiden Way', 'Berinon', 'Stonegate', 'Ulric' ]
  ]));
